wording(PLEASE) <- "The questions below ask you to say what kind of a person you think you are. For example, here is a statement: 'I watch TV all the time.' If you watch TV all the time, that sentence is very much like you. If you watch TV a lot, then the sentence is mostly like you. Or you may watch TV only a little bit--then the sentence is a little like you."
wording(AUTHSI) <- "Have you engaged in sexual intercourse when you didn't want to because a male used his position of authority (boss, teacher, camp counselor, supervisor) to make you?"
wording(PRESSSI) <- "Have you given in to sexual intercourse when you didn't want to because you were overwhelmed by a male's continual arguments and pressure?"
# type of measurement
measurement(RACE) <- "nominal"
measurement(NOASSERT) <- "nominal"
measurement(PLEASE) <- "nominal"
measurement(AUTHSI) <- "nominal"
measurement(PRESSSI) <- "nominal"
# labels associated with underlying numeric
labels(RACE) <- c(
"No response"                                   =  0,
"White"                                         =  1,
"Black"                                         =  2,
"Other"                                         =  3,
"Missing"                                       =  9)
labels(NOASSERT) <- c(
"No response"                                   =  0,
"Not at all like me"                            =  1,
"A little like me"                              =  2,
"Somewhat like me"                              =  3,
"Mostly like me"                                =  4,
"Very much like me"                             =  5,
"Missing"                                       =  9)
labels(PLEASE) <- c(
"No response"                                   =  0,
"Not at all like me"                            =  1,
"A little like me"                              =  2,
"Somewhat like me"                              =  3,
"Mostly like me"                                =  4,
"Very much like me"                             =  5,
"Missing"                                       =  9)
labels(AUTHSI) <- c(
"No response"                                   =  0,
"Never"                                         =  1,
"At least once"                                 =  2,
"Missing"                                       =  9)
labels(PRESSSI) <- c(
"No response"                                   =  0,
"Never"                                         =  1,
"At least once"                                 =  2,
"Missing"                                       =  9)
# How are missing values coded?
missing.values(RACE) <- c(0, 9)
missing.values(NOASSERT) <- c(0, 9)
missing.values(PLEASE) <- c(0, 9)
missing.values(AUTHSI) <- c(0, 9)
missing.values(PRESSSI) <- c(0, 9)
})
data_condensed$RACE <- as.character(data_condensed$RACE)
data_condensed$NOASSERT<- as.character(data_condensed$NOASSERT)
data_condensed$PLEASE <- as.character(data_condensed$PLEASE)
data_condensed$AUTHSI <- as.character(data_condensed$AUTHSI)
data_condensed$PRESSSI <- as.character(data_condensed$PRESSSI)
data_set <- data.set(data_condensed)
# Look at new data.set object
data_set
# Creating variable index for data_set
data_set <- within(data_set,{
# Description of the variables
description(RACE) <-"What was the race of the person?"
description(NOASSERT) <- "I stay in the background and let other people tell me what to do."
description(PLEASE) <- "I try to please people and make them like me by giving in to them."
description(AUTHSI) <- "Intercourse because of authority."
description(PRESSSI) <- "Intercourse because of pressure."
# Wording of survey item/interview questions
wording(RACE) <- "What is your race or ethnic background?"
wording(NOASSERT) <- "The questions below ask you to say what kind of a person you think you are. For example, here is a statement: 'I watch TV all the time.' If you watch TV all the time, that sentence is very much like you. If you watch TV a lot, then the sentence is mostly like you. Or you may watch TV only a little bit--then the sentence is a little like you."
wording(PLEASE) <- "The questions below ask you to say what kind of a person you think you are. For example, here is a statement: 'I watch TV all the time.' If you watch TV all the time, that sentence is very much like you. If you watch TV a lot, then the sentence is mostly like you. Or you may watch TV only a little bit--then the sentence is a little like you."
wording(AUTHSI) <- "Have you engaged in sexual intercourse when you didn't want to because a male used his position of authority (boss, teacher, camp counselor, supervisor) to make you?"
wording(PRESSSI) <- "Have you given in to sexual intercourse when you didn't want to because you were overwhelmed by a male's continual arguments and pressure?"
# type of measurement
measurement(RACE) <- "nominal"
measurement(NOASSERT) <- "nominal"
measurement(PLEASE) <- "nominal"
measurement(AUTHSI) <- "nominal"
measurement(PRESSSI) <- "nominal"
# labels associated with underlying numeric
labels(RACE) <- c(
"No response"                                   =  0,
"White"                                         =  1,
"Black"                                         =  2,
"Other"                                         =  3,
"Missing"                                       =  9)
labels(NOASSERT) <- c(
"No response"                                   =  0,
"Not at all like me"                            =  1,
"A little like me"                              =  2,
"Somewhat like me"                              =  3,
"Mostly like me"                                =  4,
"Very much like me"                             =  5,
"Missing"                                       =  9)
labels(PLEASE) <- c(
"No response"                                   =  0,
"Not at all like me"                            =  1,
"A little like me"                              =  2,
"Somewhat like me"                              =  3,
"Mostly like me"                                =  4,
"Very much like me"                             =  5,
"Missing"                                       =  9)
labels(AUTHSI) <- c(
"No response"                                   =  0,
"Never"                                         =  1,
"At least once"                                 =  2,
"Missing"                                       =  9)
labels(PRESSSI) <- c(
"No response"                                   =  0,
"Never"                                         =  1,
"At least once"                                 =  2,
"Missing"                                       =  9)
# How are missing values coded?
missing.values(RACE) <- c(0, 9)
missing.values(NOASSERT) <- c(0, 9)
missing.values(PLEASE) <- c(0, 9)
missing.values(AUTHSI) <- c(0, 9)
missing.values(PRESSSI) <- c(0, 9)
})
install.packages("dplyr")
install.packages("dplyr")
#install.pack
#install.pack
et
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
#install.packages("dplyr")
library(dplyr)
#install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
#install.packages("tidyverse")
library(tidyverse)
#load full dataset
data <- read_por("~/Projects/sexual_violence_college/ICPSR_03212/DS0001/03212-0001-Data.por")
install.packages("haven")
#load full dataset
data <- read_por("~/Projects/sexual_violence_college/ICPSR_03212/DS0001/03212-0001-Data.por")
library(haven)
install.packages("haven")
library(haven)
install.packages("haven")
install.packages("haven")
library(haven)
#load full dataset
data <- read_por("~/Projects/sexual_violence_college/ICPSR_03212/DS0001/03212-0001-Data.por")
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
#data subset
data_ID <- data %>%
select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
#data subset
data_ID <- dplyr::data %>%
select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
#data subset
data_ID <- data %>%
select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
install.packages("tidyr")
install.packages("tidyr")
library("tidyr")
#data subset
data_ID <- data %>%
select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
#data subset
data_ID <- data %>%
select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <- bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.bind <- tidyverse::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
#install.packages("tidyverse")
library(tidyverse)
data.bind <- tidyverse::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.bind <- dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.bind <- data_ID %>%
dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.bind <-dplyr::bind_cols(data_ID, CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
#data.bind <-dplyr::bind_cols(data_ID, CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
#PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.gather <- data_ID %>%
gather(key = "TRAIT", value = "TRAIT_SCORE", ... = -CODENUM, -AUTHSI, -PRESSSI, -RACE)
data.bind <-dplyr::bind_cols(data_ID, CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.bind <-dplyr::bind_cols(data_ID$CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
data.bind <-dplyr::bind_cols(list(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.gather <- data_ID %>%
gather(key = "TRAIT", value = "TRAIT_SCORE", ... = -CODENUM, -AUTHSI, -PRESSSI, -RACE)
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <-dplyr::bind_cols(data_ID$CODENUM = data_ID$CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
data.bind <-dplyr::bind_cols(c(CODENUM = data_ID$CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(c(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <-dplyr::bind_cols(c(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(data_ID, c(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(data_ID, c( RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(data_ID, c(RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(list(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(data_ID, list(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <-dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.bind <-dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
install.packages("magrittr")
library(magrittr)
#install.packages("dplyr")
library("dplyr")
#install.packages("tidyverse")
library(tidyverse)
#install.packages("haven")
library(haven)
install.packages("tidyr")
library("tidyr")
#load full dataset
data <- read_por("~/Projects/sexual_violence_college/ICPSR_03212/DS0001/03212-0001-Data.por")
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <-dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
#install.packages("magrittr")
library(magrittr)
#install.packages("dplyr")
library("dplyr")
#install.packages("tidyverse")
library(tidyverse)
#install.packages("haven")
library(haven)
#install.packages("tidyr")
library("tidyr")
#load full dataset
data <- read_por("~/Projects/sexual_violence_college/ICPSR_03212/DS0001/03212-0001-Data.por")
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <-dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <- bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
View(data_ID)
data.bind <- dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI)
data.bind <- dplyr::bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
bind_cols(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
edata.bind <-dplyr::bind_cols(data_ID(CODENUM = CODENUM, RACE = RACE, NOASSERT = NOASSERT, PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI))
data.gather <- data_ID %>%
gather(key = "TRAIT", value = "TRAIT_SCORE", ... = -CODENUM, -AUTHSI, -PRESSSI, -RACE)
#convert columns to numeric
data_condensed$RACE <- as.factor(data_ID$RACE)
#convert columns to numeric
data_ID$RACE <- as.factor(data_ID$RACE)
#convert columns to factors
data_ID$CODENUM <- as.factor(data_ID$CODENUM)
data_ID$RACE <- as.factor(data_ID$RACE)
data_ID$NOASSERT<- as.factor(data_ID$NOASSERT)
data_ID$PLEASE <- as.factor(data_ID$PLEASE)
data_ID$AUTHSI <- as.factor(data_ID$AUTHSI)
data_ID$PRESSSI <- as.factor(data_ID$PRESSSI)
data_ID$AUTHSI <- as.factor(data_ID$AUTHSI)
data_ID$AUTHSI <- as.factor(data_ID$AUTHSI)
data.gather <- data_ID %>%
gather(key = "TRAIT", value = "TRAIT_SCORE", ... = -CODENUM, -AUTHSI, -PRESSSI, -RACE)
#convert columns to factors
data_ID$CODENUM <- as.numeric(data_ID$CODENUM)
data_ID$RACE <- as.numeric(data_ID$RACE)
data_ID$NOASSERT<- as.numeric(data_ID$NOASSERT)
data_ID$PLEASE <- as.numeric(data_ID$PLEASE)
data_ID$AUTHSI <- as.numeric(data_ID$AUTHSI)
#data subset
data_ID <- data %>%
dplyr::select(CODENUM, RACE, NOASSERT, PLEASE, PRESSSI, AUTHSI)
data_ID$AUTHSI <- as.numeric(data_ID$AUTHSI)
data_ID$PRESSSI <- as.numeric(data_ID$PRESSSI)
#convert columns to factors
data_ID$CODENUM <- as.numeric(data_ID$CODENUM)
data_ID$RACE <- as.numeric(data_ID$RACE)
data_ID$NOASSERT<- as.numeric(data_ID$NOASSERT)
data_ID$PLEASE <- as.numeric(data_ID$PLEASE)
data_ID$AUTHSI <- as.numeric(data_ID$AUTHSI)
data_ID$PRESSSI <- as.numeric(data_ID$PRESSSI)
data.gather <- data_ID %>%
gather(key = "TRAIT", value = "TRAIT_SCORE", ... = -CODENUM, -AUTHSI, -PRESSSI, -RACE)
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~AUTHSI)
ggplot(data2, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~AUTHSI)
data <- bind_cols(ID = ID, RACE = RACE, NOASSERT = NOASSERT,
PLEASE = PLEASE, AUTHSI = AUTHSI, PRESSSI = PRESSSI)
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI)
race.labeller <- labeller(
1 = White,
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI)
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~PRESSSI)
#change AUTHSI plot to be stacked and binwidth to NULL
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "stack", binwidth = NULL, na.rm = TRUE) +
facet_grid(RACE~AUTHSI)
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free")
#plot TRAIT_SCORE facetted by RACE and PRESSSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~PRESSSI, scales = "free")
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_cartesian()
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_cartesian(ratio=1 )
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_cartesian(ratio = 3 )
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_fixed(ratio = 3 )
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_fixed(ratio = 6)
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_fixed(ratio = -5)
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") + coord_fixed()
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_wrap(RACE~AUTHSI, scales = "free")
#change PRESSSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_wrap(RACE~PRESSSI, scales = "free")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme(axis.title.x = "Trait Score", axis.title.y = "Count", plot.title = "Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and AUTHSI", legend.direction = "horizontal", legend.position = "bottom")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme(element_text(axis.title.x = "Trait Score", axis.title.y = "Count", plot.title = "Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and AUTHSI"), legend.direction = "horizontal", legend.position = "bottom")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme(axis.title.x = "Trait Score", axis.title.y = "Count", plot.title = "Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and AUTHSI", legend.direction = "horizontal", legend.position = "bottom")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme(axis.title.x = element_text("Trait Score"), axis.title.y = "Count", plot.title = "Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and AUTHSI", legend.direction = "horizontal", legend.position = "bottom")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme(axis.title.x = element_text("Trait Score"), axis.title.y = element_text("Count"), element_text(plot.title = "Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and AUTHSI"), legend.direction = "horizontal", legend.position = "bottom")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme(axis.title.x = element_text("Trait Score"), axis.title.y = element_text("Count"), plot.title = element_text("Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and AUTHSI"), legend.direction = "horizontal", legend.position = "bottom")
#change PRESSSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~PRESSSI, scales = "free") +
theme(axis.title.x = element_text("Trait Score"), axis.title.y = element_text("Count"), plot.title = element_text("Traits 'NOASSERT' and 'PLEASE' when accounting for RACE and PRESSSI"), legend.direction = "horizontal", legend.position = "bottom")
install.packages("ggthemes")
install.packages("ggthemes")
nstall.packages("ggthemes")
install.packages("ggthemes")
install.packages("ggthemes")
library("ggthemes")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free")
#change AUTHSI plot to scale differently based on the facet
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_economist()
#change AUTHSI plot to theme using the solarized color palette
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_solarized()
#change AUTHSI plot to theme based on Stephen Few's rules
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_few()
#change AUTHSI plot to theme based on The Economist
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_economist()
#change AUTHSI plot to theme based on The Economist
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_economist()
#change AUTHSI plot to theme using the solarized color palette
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_solarized()
#change AUTHSI plot to theme based on Stephen Few's rules
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE) +
facet_grid(RACE~AUTHSI, scales = "free") +
theme_few()
#plot TRAIT_SCORE facetted by RACE and PRESSSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~PRESSSI)
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)+
theme(element_text(strip.text.y = c("Black", "White", "Other", "NA")))
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)+
theme(strip.text.y = c("Black", "White", "Other", "NA"))
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)+
theme(strip.text.y = element_text(c("Black", "White", "Other", "NA")))
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)+
theme(strip.text.y = element_text(c(1 == "Black", 2 == "White", 3 == "Other")))
data_ID$RACE[data_ID$RACE == "1"] = "Black"
data_ID$RACE[data_ID$RACE == "1"] = "Black"
data_ID$RACE[data_ID$RACE == "2"] = "White"
data_ID$RACE[data_ID$RACE == "3"] = "Other"
data_ID$AUTHSI[data_ID$AUTHSI == "0"] = "No Response"
data_ID$AUTHSI[data_ID$AUTHSI == "1"] = "Never"
data_ID$AUTHSI[data_ID$AUTHSI == "2"] = "At least once"
data_ID$PRESSSI[data_ID$PRESSSI == "0"] = "No Response"
data_ID$PRESSSI[data_ID$PRESSSI == "1"] = "Never"
data_ID$PRESSSI[data_ID$PRESSSI == "2"] = "At least once"
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)
#plot TRAIT_SCORE facetted by RACE and PRESSSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge") +
facet_grid(RACE~PRESSSI)
labeller <- labeller(data_ID$RACE[data_ID$RACE == "1"] = "Black",
data_ID$RACE[data_ID$RACE == "1"] = "Black"
data_ID$RACE[data_ID$RACE == "2"] = "White"
data_ID$RACE[data_ID$RACE == "3"] = "Other"
data_ID$AUTHSI[data_ID$AUTHSI == "0"] = "No Response"
data_ID$AUTHSI[data_ID$AUTHSI == "1"] = "Never"
data_ID$AUTHSI[data_ID$AUTHSI == "2"] = "At least once"
data_ID$PRESSSI[data_ID$PRESSSI == "0"] = "No Response"
data_ID$PRESSSI[data_ID$PRESSSI == "1"] = "Never"
data_ID$PRESSSI[data_ID$PRESSSI == "2"] = "At least once"
#plot TRAIT_SCORE facetted by RACE and AUTHSI
ggplot(data.gather, aes(x = TRAIT_SCORE, fill = TRAIT)) +
geom_bar(position = "dodge", na.rm = TRUE, width = ) +
facet_grid(RACE~AUTHSI)
labeller(data_ID$RACE[data_ID$RACE == "1"] = "Black",
